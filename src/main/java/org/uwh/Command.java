/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.uwh;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Command extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9046421310130205441L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Command\",\"namespace\":\"org.uwh\",\"fields\":[{\"name\":\"Type\",\"type\":{\"type\":\"enum\",\"name\":\"CommandType\",\"symbols\":[\"TICK\",\"QUERY\"]}},{\"name\":\"Payload\",\"type\":[\"long\",{\"type\":\"record\",\"name\":\"Query\",\"fields\":[{\"name\":\"Select\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"Ids\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"Where\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"}}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Command> ENCODER =
      new BinaryMessageEncoder<Command>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Command> DECODER =
      new BinaryMessageDecoder<Command>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Command> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Command> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Command> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Command>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Command to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Command from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Command instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Command fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private org.uwh.CommandType Type;
   private java.lang.Object Payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Command() {}

  /**
   * All-args constructor.
   * @param Type The new value for Type
   * @param Payload The new value for Payload
   */
  public Command(org.uwh.CommandType Type, java.lang.Object Payload) {
    this.Type = Type;
    this.Payload = Payload;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Type;
    case 1: return Payload;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Type = (org.uwh.CommandType)value$; break;
    case 1: Payload = value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Type' field.
   * @return The value of the 'Type' field.
   */
  public org.uwh.CommandType getType() {
    return Type;
  }


  /**
   * Sets the value of the 'Type' field.
   * @param value the value to set.
   */
  public void setType(org.uwh.CommandType value) {
    this.Type = value;
  }

  /**
   * Gets the value of the 'Payload' field.
   * @return The value of the 'Payload' field.
   */
  public java.lang.Object getPayload() {
    return Payload;
  }


  /**
   * Sets the value of the 'Payload' field.
   * @param value the value to set.
   */
  public void setPayload(java.lang.Object value) {
    this.Payload = value;
  }

  /**
   * Creates a new Command RecordBuilder.
   * @return A new Command RecordBuilder
   */
  public static org.uwh.Command.Builder newBuilder() {
    return new org.uwh.Command.Builder();
  }

  /**
   * Creates a new Command RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Command RecordBuilder
   */
  public static org.uwh.Command.Builder newBuilder(org.uwh.Command.Builder other) {
    if (other == null) {
      return new org.uwh.Command.Builder();
    } else {
      return new org.uwh.Command.Builder(other);
    }
  }

  /**
   * Creates a new Command RecordBuilder by copying an existing Command instance.
   * @param other The existing instance to copy.
   * @return A new Command RecordBuilder
   */
  public static org.uwh.Command.Builder newBuilder(org.uwh.Command other) {
    if (other == null) {
      return new org.uwh.Command.Builder();
    } else {
      return new org.uwh.Command.Builder(other);
    }
  }

  /**
   * RecordBuilder for Command instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Command>
    implements org.apache.avro.data.RecordBuilder<Command> {

    private org.uwh.CommandType Type;
    private java.lang.Object Payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.uwh.Command.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Type)) {
        this.Type = data().deepCopy(fields()[0].schema(), other.Type);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.Payload)) {
        this.Payload = data().deepCopy(fields()[1].schema(), other.Payload);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
    }

    /**
     * Creates a Builder by copying an existing Command instance
     * @param other The existing instance to copy.
     */
    private Builder(org.uwh.Command other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.Type)) {
        this.Type = data().deepCopy(fields()[0].schema(), other.Type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Payload)) {
        this.Payload = data().deepCopy(fields()[1].schema(), other.Payload);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'Type' field.
      * @return The value.
      */
    public org.uwh.CommandType getType() {
      return Type;
    }


    /**
      * Sets the value of the 'Type' field.
      * @param value The value of 'Type'.
      * @return This builder.
      */
    public org.uwh.Command.Builder setType(org.uwh.CommandType value) {
      validate(fields()[0], value);
      this.Type = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Type' field has been set.
      * @return True if the 'Type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Type' field.
      * @return This builder.
      */
    public org.uwh.Command.Builder clearType() {
      Type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Payload' field.
      * @return The value.
      */
    public java.lang.Object getPayload() {
      return Payload;
    }


    /**
      * Sets the value of the 'Payload' field.
      * @param value The value of 'Payload'.
      * @return This builder.
      */
    public org.uwh.Command.Builder setPayload(java.lang.Object value) {
      validate(fields()[1], value);
      this.Payload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Payload' field has been set.
      * @return True if the 'Payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Payload' field.
      * @return This builder.
      */
    public org.uwh.Command.Builder clearPayload() {
      Payload = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Command build() {
      try {
        Command record = new Command();
        record.Type = fieldSetFlags()[0] ? this.Type : (org.uwh.CommandType) defaultValue(fields()[0]);
        record.Payload = fieldSetFlags()[1] ? this.Payload :  defaultValue(fields()[1]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Command>
    WRITER$ = (org.apache.avro.io.DatumWriter<Command>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Command>
    READER$ = (org.apache.avro.io.DatumReader<Command>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










