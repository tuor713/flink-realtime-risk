/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.uwh;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RiskPosition extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8434805689011523130L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RiskPosition\",\"namespace\":\"org.uwh\",\"fields\":[{\"name\":\"UIDType\",\"type\":{\"type\":\"enum\",\"name\":\"UIDType\",\"symbols\":[\"UIPID\",\"UITID\"]}},{\"name\":\"UID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"FirmAccountMnemonic\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ProductType\",\"type\":{\"type\":\"enum\",\"name\":\"ProductType\",\"symbols\":[\"Bond\",\"CDS\",\"CDX\",\"Other\"]}},{\"name\":\"AuditDateTimeUTC\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RiskPosition> ENCODER =
      new BinaryMessageEncoder<RiskPosition>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RiskPosition> DECODER =
      new BinaryMessageDecoder<RiskPosition>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RiskPosition> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RiskPosition> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RiskPosition> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RiskPosition>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RiskPosition to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RiskPosition from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RiskPosition instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RiskPosition fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private org.uwh.UIDType UIDType;
   private java.lang.String UID;
   private java.lang.String FirmAccountMnemonic;
   private org.uwh.ProductType ProductType;
   private long AuditDateTimeUTC;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RiskPosition() {}

  /**
   * All-args constructor.
   * @param UIDType The new value for UIDType
   * @param UID The new value for UID
   * @param FirmAccountMnemonic The new value for FirmAccountMnemonic
   * @param ProductType The new value for ProductType
   * @param AuditDateTimeUTC The new value for AuditDateTimeUTC
   */
  public RiskPosition(org.uwh.UIDType UIDType, java.lang.String UID, java.lang.String FirmAccountMnemonic, org.uwh.ProductType ProductType, java.lang.Long AuditDateTimeUTC) {
    this.UIDType = UIDType;
    this.UID = UID;
    this.FirmAccountMnemonic = FirmAccountMnemonic;
    this.ProductType = ProductType;
    this.AuditDateTimeUTC = AuditDateTimeUTC;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return UIDType;
    case 1: return UID;
    case 2: return FirmAccountMnemonic;
    case 3: return ProductType;
    case 4: return AuditDateTimeUTC;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: UIDType = (org.uwh.UIDType)value$; break;
    case 1: UID = value$ != null ? value$.toString() : null; break;
    case 2: FirmAccountMnemonic = value$ != null ? value$.toString() : null; break;
    case 3: ProductType = (org.uwh.ProductType)value$; break;
    case 4: AuditDateTimeUTC = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'UIDType' field.
   * @return The value of the 'UIDType' field.
   */
  public org.uwh.UIDType getUIDType() {
    return UIDType;
  }


  /**
   * Sets the value of the 'UIDType' field.
   * @param value the value to set.
   */
  public void setUIDType(org.uwh.UIDType value) {
    this.UIDType = value;
  }

  /**
   * Gets the value of the 'UID' field.
   * @return The value of the 'UID' field.
   */
  public java.lang.String getUID() {
    return UID;
  }


  /**
   * Sets the value of the 'UID' field.
   * @param value the value to set.
   */
  public void setUID(java.lang.String value) {
    this.UID = value;
  }

  /**
   * Gets the value of the 'FirmAccountMnemonic' field.
   * @return The value of the 'FirmAccountMnemonic' field.
   */
  public java.lang.String getFirmAccountMnemonic() {
    return FirmAccountMnemonic;
  }


  /**
   * Sets the value of the 'FirmAccountMnemonic' field.
   * @param value the value to set.
   */
  public void setFirmAccountMnemonic(java.lang.String value) {
    this.FirmAccountMnemonic = value;
  }

  /**
   * Gets the value of the 'ProductType' field.
   * @return The value of the 'ProductType' field.
   */
  public org.uwh.ProductType getProductType() {
    return ProductType;
  }


  /**
   * Sets the value of the 'ProductType' field.
   * @param value the value to set.
   */
  public void setProductType(org.uwh.ProductType value) {
    this.ProductType = value;
  }

  /**
   * Gets the value of the 'AuditDateTimeUTC' field.
   * @return The value of the 'AuditDateTimeUTC' field.
   */
  public long getAuditDateTimeUTC() {
    return AuditDateTimeUTC;
  }


  /**
   * Sets the value of the 'AuditDateTimeUTC' field.
   * @param value the value to set.
   */
  public void setAuditDateTimeUTC(long value) {
    this.AuditDateTimeUTC = value;
  }

  /**
   * Creates a new RiskPosition RecordBuilder.
   * @return A new RiskPosition RecordBuilder
   */
  public static org.uwh.RiskPosition.Builder newBuilder() {
    return new org.uwh.RiskPosition.Builder();
  }

  /**
   * Creates a new RiskPosition RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RiskPosition RecordBuilder
   */
  public static org.uwh.RiskPosition.Builder newBuilder(org.uwh.RiskPosition.Builder other) {
    if (other == null) {
      return new org.uwh.RiskPosition.Builder();
    } else {
      return new org.uwh.RiskPosition.Builder(other);
    }
  }

  /**
   * Creates a new RiskPosition RecordBuilder by copying an existing RiskPosition instance.
   * @param other The existing instance to copy.
   * @return A new RiskPosition RecordBuilder
   */
  public static org.uwh.RiskPosition.Builder newBuilder(org.uwh.RiskPosition other) {
    if (other == null) {
      return new org.uwh.RiskPosition.Builder();
    } else {
      return new org.uwh.RiskPosition.Builder(other);
    }
  }

  /**
   * RecordBuilder for RiskPosition instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RiskPosition>
    implements org.apache.avro.data.RecordBuilder<RiskPosition> {

    private org.uwh.UIDType UIDType;
    private java.lang.String UID;
    private java.lang.String FirmAccountMnemonic;
    private org.uwh.ProductType ProductType;
    private long AuditDateTimeUTC;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.uwh.RiskPosition.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.UIDType)) {
        this.UIDType = data().deepCopy(fields()[0].schema(), other.UIDType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.UID)) {
        this.UID = data().deepCopy(fields()[1].schema(), other.UID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.FirmAccountMnemonic)) {
        this.FirmAccountMnemonic = data().deepCopy(fields()[2].schema(), other.FirmAccountMnemonic);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.ProductType)) {
        this.ProductType = data().deepCopy(fields()[3].schema(), other.ProductType);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.AuditDateTimeUTC)) {
        this.AuditDateTimeUTC = data().deepCopy(fields()[4].schema(), other.AuditDateTimeUTC);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing RiskPosition instance
     * @param other The existing instance to copy.
     */
    private Builder(org.uwh.RiskPosition other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.UIDType)) {
        this.UIDType = data().deepCopy(fields()[0].schema(), other.UIDType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.UID)) {
        this.UID = data().deepCopy(fields()[1].schema(), other.UID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.FirmAccountMnemonic)) {
        this.FirmAccountMnemonic = data().deepCopy(fields()[2].schema(), other.FirmAccountMnemonic);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ProductType)) {
        this.ProductType = data().deepCopy(fields()[3].schema(), other.ProductType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.AuditDateTimeUTC)) {
        this.AuditDateTimeUTC = data().deepCopy(fields()[4].schema(), other.AuditDateTimeUTC);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'UIDType' field.
      * @return The value.
      */
    public org.uwh.UIDType getUIDType() {
      return UIDType;
    }


    /**
      * Sets the value of the 'UIDType' field.
      * @param value The value of 'UIDType'.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder setUIDType(org.uwh.UIDType value) {
      validate(fields()[0], value);
      this.UIDType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'UIDType' field has been set.
      * @return True if the 'UIDType' field has been set, false otherwise.
      */
    public boolean hasUIDType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'UIDType' field.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder clearUIDType() {
      UIDType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'UID' field.
      * @return The value.
      */
    public java.lang.String getUID() {
      return UID;
    }


    /**
      * Sets the value of the 'UID' field.
      * @param value The value of 'UID'.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder setUID(java.lang.String value) {
      validate(fields()[1], value);
      this.UID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'UID' field has been set.
      * @return True if the 'UID' field has been set, false otherwise.
      */
    public boolean hasUID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'UID' field.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder clearUID() {
      UID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'FirmAccountMnemonic' field.
      * @return The value.
      */
    public java.lang.String getFirmAccountMnemonic() {
      return FirmAccountMnemonic;
    }


    /**
      * Sets the value of the 'FirmAccountMnemonic' field.
      * @param value The value of 'FirmAccountMnemonic'.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder setFirmAccountMnemonic(java.lang.String value) {
      validate(fields()[2], value);
      this.FirmAccountMnemonic = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'FirmAccountMnemonic' field has been set.
      * @return True if the 'FirmAccountMnemonic' field has been set, false otherwise.
      */
    public boolean hasFirmAccountMnemonic() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'FirmAccountMnemonic' field.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder clearFirmAccountMnemonic() {
      FirmAccountMnemonic = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ProductType' field.
      * @return The value.
      */
    public org.uwh.ProductType getProductType() {
      return ProductType;
    }


    /**
      * Sets the value of the 'ProductType' field.
      * @param value The value of 'ProductType'.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder setProductType(org.uwh.ProductType value) {
      validate(fields()[3], value);
      this.ProductType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ProductType' field has been set.
      * @return True if the 'ProductType' field has been set, false otherwise.
      */
    public boolean hasProductType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ProductType' field.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder clearProductType() {
      ProductType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'AuditDateTimeUTC' field.
      * @return The value.
      */
    public long getAuditDateTimeUTC() {
      return AuditDateTimeUTC;
    }


    /**
      * Sets the value of the 'AuditDateTimeUTC' field.
      * @param value The value of 'AuditDateTimeUTC'.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder setAuditDateTimeUTC(long value) {
      validate(fields()[4], value);
      this.AuditDateTimeUTC = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'AuditDateTimeUTC' field has been set.
      * @return True if the 'AuditDateTimeUTC' field has been set, false otherwise.
      */
    public boolean hasAuditDateTimeUTC() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'AuditDateTimeUTC' field.
      * @return This builder.
      */
    public org.uwh.RiskPosition.Builder clearAuditDateTimeUTC() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RiskPosition build() {
      try {
        RiskPosition record = new RiskPosition();
        record.UIDType = fieldSetFlags()[0] ? this.UIDType : (org.uwh.UIDType) defaultValue(fields()[0]);
        record.UID = fieldSetFlags()[1] ? this.UID : (java.lang.String) defaultValue(fields()[1]);
        record.FirmAccountMnemonic = fieldSetFlags()[2] ? this.FirmAccountMnemonic : (java.lang.String) defaultValue(fields()[2]);
        record.ProductType = fieldSetFlags()[3] ? this.ProductType : (org.uwh.ProductType) defaultValue(fields()[3]);
        record.AuditDateTimeUTC = fieldSetFlags()[4] ? this.AuditDateTimeUTC : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RiskPosition>
    WRITER$ = (org.apache.avro.io.DatumWriter<RiskPosition>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RiskPosition>
    READER$ = (org.apache.avro.io.DatumReader<RiskPosition>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.UIDType.ordinal());

    out.writeString(this.UID);

    out.writeString(this.FirmAccountMnemonic);

    out.writeEnum(this.ProductType.ordinal());

    out.writeLong(this.AuditDateTimeUTC);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.UIDType = org.uwh.UIDType.values()[in.readEnum()];

      this.UID = in.readString();

      this.FirmAccountMnemonic = in.readString();

      this.ProductType = org.uwh.ProductType.values()[in.readEnum()];

      this.AuditDateTimeUTC = in.readLong();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.UIDType = org.uwh.UIDType.values()[in.readEnum()];
          break;

        case 1:
          this.UID = in.readString();
          break;

        case 2:
          this.FirmAccountMnemonic = in.readString();
          break;

        case 3:
          this.ProductType = org.uwh.ProductType.values()[in.readEnum()];
          break;

        case 4:
          this.AuditDateTimeUTC = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










